openapi: 3.0.3
info:
  title: Bookings API
  version: 0.0.1
  description: |
    The Booking API supports simple bookings actions.

servers:
  - url: http://localhost:8080/api/bookings
    description: Local development server
externalDocs:
  url: https://swagger.io/specification/
  description: Find more information about OAS3.0 standard.
tags:
  - name: Bookings
    description: API containing information about bookings
paths:
  /:
    get:
      operationId: getBookingsByUser
      tags:
        - Booking
      summary: Retrieve all bookings of a user
      description: Retrieve all bookings of a user by userId
      parameters:
        - in: query
          name: userId
          required: true
          description: Id of the user, who made the booking.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Returned a list of bookings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      operationId: createBooking
      tags:
        - Booking
      summary: Create a booking.
      description: Creates a booking with given parameters.
      requestBody:
        description: Booking object that needs to be added to the database.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreate'
      responses:
        '201':
          description: Booking created.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{id}:
    parameters:
      - name: id
        in: path
        description: Booking id
        required: true
        schema:
          type: integer
          minimum: 1
    get:
      operationId: getBookingById
      tags:
        - Booking
      summary: Retrieve a booking by id
      description: Retrieve a booking by id
      responses:
        '200':
          description: Returned a booking.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      operationId: cancelBooking
      tags:
          - Booking
      summary: Cancel a booking.
      description: Cancel a booking with given id.
      responses:
        '200':
          description: Booking canceled.
        '404':
          description: Booking not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rooms/{roomId}:
    parameters:
      - name: roomId
        in: path
        description: Room id
        required: true
        schema:
          type: integer
          minimum: 1
    get:
      operationId: getRoomAvailability
      tags:
        - Booking
      summary: Get the availability of a certain room
      description: Get the availability of a certain room by roomId
      parameters:
        - in: query
          name: startDate
          required: true
          description: Possible start date for booking
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          required: true
          description: Possible end date for booking
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Returned a list of bookings.
          content:
            application/json:
              schema:
                type: boolean

components:
  schemas:
    BookingCreate:
      type: object
      properties:
        userId:
          type: integer
          description: Id of the user, who made the booking.
          example: 0
        roomId:
          type: integer
          description: Id of the room, which was booked.
          example: 0
        status:
          type: string
          description: Booking status.
          enum: [ CREATED, BOOKED, CANCELLED ]
          example: CREATED
        startDate:
          type: string
          format: date
          description: Booking start date time
        endDate:
          type: string
          format: date
          description: Booking end date time
        bookDate:
          type: string
          format: date
          description: Booking date time
        price:
          type: number
          format: currency
          description: Booking price in high precision
    Booking:
      type: object
      properties:
        id:
          type: integer
          description: Booking id.
          example: 0
        checkinId:
          type: integer
          description: Related id in the check-in service db.
          example: 0
        paymentId:
          type: integer
          description: Related id in the check-in service db.
          example: 0
        modifiedAt:
          type: string
          format: date-time
          description: Last modification timestamp
        modifiedBy:
          type: integer
          description: Id of the user.
          example: 1
      allOf:
        - $ref: '#/components/schemas/BookingCreate'

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code
          minimum: 0